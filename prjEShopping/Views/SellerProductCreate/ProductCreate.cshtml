@model IEnumerable<prjEShopping.Models.ViewModels.SellerProductCreateVM>
@{
    ViewBag.Title = "ProductCreate";
    Layout = "~/Views/Shared/_LayoutSellerMain.cshtml";
}

<div class="col-8 col-md-9 col-lg-9 col-xl-10 container bg-warning rounded-2 border border-info border-1 ">
    <p class="fs-4 mt-3 fw-bold text-center text-primary">新增商品</p>
    <hr>
    <form method="post" enctype="multipart/form-data" action="ProductCreate" >
        <div class="row container">

            <div class="col-sm-6 col-xl-6">

                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">主分類：</span>
                    </div>
                    <div class="col-4">
                        <select id="maincategories" class="form-select" name="CategoryName">
                        </select>
                    </div>
                    <div class="col-4">
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">小分類：</span>
                    </div>
                    <div class="col-4">
                        <select id="subcategories" class="form-select" name="SubcategoryName">
                        </select>
                    </div>
                    <div class="col-4">
                    </div>
                </div>
                <div id="changesubname">

                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">品牌：</span>
                    </div>
                    <div class="col-4">
                        <select class="form-select" id="brand" name="BrandName">
                        </select>
                    </div>
                    <div class="col-4">
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">商品名稱：</span>
                    </div>
                    <div class="col-4">
                        <input type="text" name="ProductName">
                    </div>
                    <div class="col-4"></div>
                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">商品描述：</span>
                    </div>
                    <div class="col-4">
                        <input type="text" name="ProductDescription">
                    </div>
                    <div class="col-4"></div>
                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">單價：</span>
                    </div>
                    <div class="col-4">
                        <input type="text" name="Price">
                    </div>
                    <div class="col-4"></div>
                </div>
                <div class="row mb-2">
                    <div class="col-4 d-flex align-items-center">
                        <span class="fw-bold text-primary">數量：</span>
                    </div>
                    <div class="col-4">
                        <input type="text" name="Quantity">
                    </div>
                    <div class="col-4"></div>
                </div>
            </div>

        </div>
        <div class=" col-sm-6 col-xl-6 ">
            <div class="d-flex flex-column align-items-start  ms-2" width="130"> 
                <input type="file" name="photo1" class="btn btn-secondary mt-2" >
            </div>
            <div class="d-flex flex-column align-items-start  ms-2" width="130">
                <input type="file" name="photo2" class="btn btn-secondary mt-2">
            </div>
            <div class="d-flex flex-column align-items-start  ms-2" width="130">
                <input type="file" name="photo3" class="btn btn-secondary mt-2">
            </div>
        </div>
        <div class="container">
            <input type="submit" class="btn btn-secondary mt-2 align-items-center" value="儲存" id="btnsubmit"/>
        </div>
    </form>
</div>

@section Scripts
    {
    <script>

            const selmaincategories = document.querySelector('#maincategories');
            const selsubcategories = document.querySelector('#subcategories');
            const seloptions = document.querySelector('#A>span');

            function LoadMainCategories()
            {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', '@Url.Content("~/SellerProductCreateApi/getCategoryName")');
                xhr.send();

                xhr.addEventListener('load', () => {
                    const datas = JSON.parse(xhr.responseText);
                    var categories = datas.map(category => {
                        return (`<option value="${category}">${category}</option>`)
                    })
                    selmaincategories.innerHTML = categories.join("");
                    LoadSubCategories();
                })
            }


             function LoadSubCategories()
            {
                const categoryname = selmaincategories.options[selmaincategories.selectedIndex].value;
                const xhr = new XMLHttpRequest();
                xhr.open('GET', `@Url.Content("~/SellerProductCreateApi/getSubcategoryName?categoryname=")${categoryname}`);
                xhr.send();

                xhr.addEventListener('load', () => {
                    const datas = JSON.parse(xhr.responseText);
                    var subcategories = datas.map(subcatory => {
                        return (`<option value="${subcatory}">${subcatory}</option>`)
                    })
                    selsubcategories.innerHTML = subcategories.join("");
                     LoadOptionNames();

                })
            }

             function LoadOptionNames()
            {
                const subcatorynames = selsubcategories.options[selsubcategories.selectedIndex].value;
            $.ajax({
                url: '@Url.Content("/SellerProductCreateApi/getOptionNames")',
                method: 'GET',
                data: { "subcategoryname": `${subcatorynames}`},
                dataType: 'json',
                success: function (response) {
                    let count = 0;
                    let datas = '';
                    response.forEach( function (item) {

                        datas +=`<div class="row mb-2">
                                    <div class="col-4 d-flex align-items-center" id="A">
                                        <span value="${response[count]}" class="fw-bold text-primary">${response[count]}：</span>
                                        <input type="hidden" value="${response[count]}" id="optionname${count}" name="SpecificationName${count}"/>
                                    </div>
                                    <div class="col-4">
                                        <select class="form-select" id="optionvalue${count}" name="OptionName${count}">
                                        </select>
                                    </div>
                                    <div class="col-4">
                                    </div>
                                </div>`;
                                count++;
                            });

                    $("#changesubname").html(datas)
                },
                error: function (xhr, status, error) {

                    console.error(error);
                }

            });
                 setTimeout(() => {
                     LoadOptionValue();
                 }, 500);

            }


             function LoadOptionValue()
            {

                for (let i = 0; i < 5; i++)
                {
                    const optionnameElement = document.querySelector(`#optionname${i}`);
                    const optionname = optionnameElement.getAttribute('value');
                    const subcatorynames = selsubcategories.options[selsubcategories.selectedIndex].value;
                    
                    const xhr = new XMLHttpRequest();
                    xhr.open('GET', `@Url.Content("~/SellerProductCreateApi/getOptionValues?specificationname=")${encodeURIComponent(optionname)}&subcategoryname=${encodeURIComponent(subcatorynames)}`);
                    xhr.send();


                    xhr.addEventListener('load', () => {
                        const values = JSON.parse(xhr.responseText);
                        const optionContainer = document.querySelector(`#optionvalue${i}`);
                        var optionnames = values.map(option => {
                            return (`<option value="${option}">${option}</option>`);
                        });
                        optionContainer.innerHTML = optionnames.join("");

                    });
                }
            }

            function LoadBrand()
            {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', '@Url.Content("~/SellerProductCreateApi/getBrand")');
                xhr.send();

                xhr.addEventListener('load', () => {
                    const datas = JSON.parse(xhr.responseText);
                    var brandnames = datas.map(brand => {
                        return (`<option value="${brand}">${brand}</option>`)
                    })

                    $('#brand').html(brandnames.join(""));

                })
            }

        LoadMainCategories();
        LoadBrand();

        selmaincategories.addEventListener('change', () => {
            LoadSubCategories()
        })

        selsubcategories.addEventListener('change', () => {
            LoadOptionNames();
            setTimeout(() => {
                LoadOptionValue();
            }, 500);
        })

        


    </script>
}