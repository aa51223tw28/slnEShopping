@model prjEShopping.Models.ViewModels.ADProductVM
@using Newtonsoft.Json

@{
    ViewBag.Title = "CreateAD";
    Layout = "~/Views/Shared/_LayoutAdminLogin.cshtml";
}

<div class="col-6 bg-secondary overflow-auto">

    <h2>新增廣告</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ADField, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="ADField" name="ADField" class="form-control" required onchange="setDateBasedOnQuantity()">
                        <option selected disabled>請選擇</option>
                        <option value="1">進版全頁</option>
                        <option value="2">限時廣告A欄</option>
                        <option value="3">限時廣告B欄</option>
                        <option value="4">限時廣告C欄</option>
                        <option value="5">限時廣告D欄</option>
                        <option value="6">限時廣告E欄</option>

                    </select>
                    @Html.ValidationMessageFor(model => model.ADField, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ADName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="ADName" id="ADName" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ADName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ADPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="number" name="ADPoint" id="ADPoint" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ADPoint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ADStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="datetime-local" name="ADStartDate" id="ADStartDate" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ADStartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ADEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="datetime-local" name="ADEndDate" id="ADEndDate" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ADEndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="text" name="ADImagePath" id="ADImagePath" hidden />
                    @Html.ValidationMessageFor(model => model.ADImagePath, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="text" name="ProductId" id="ProductId" hidden />
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="text" name="Discount" id="Discount" hidden />
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="新增" class="btn btn-primary mt-2" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("取消", "Index", null, new { @class = "btn btn-danger my-2" })
    </div>

</div>

@section Scripts{

    <script>
        $(document).ready(function () {
            $("#ADField").change(function () {
                var selectedOption = $(this).val();

                if (selectedOption == "1") {
                    $("#ADName").val("全版廣告");
                    $("#ADPoint").val(5000);
                } else if (selectedOption == "2") {
                    $("#ADName").val("限時廣告(8)");
                    $("#ADPoint").val(800);
                } else if (selectedOption == "3") {
                    $("#ADName").val("限時廣告(12)");
                    $("#ADPoint").val(1000);
                } else if (selectedOption == "4") {
                    $("#ADName").val("限時廣告(16)");
                    $("#ADPoint").val(1200);
                } else if (selectedOption == "5") {
                    $("#ADName").val("限時廣告(24)");
                    $("#ADPoint").val(1500);
                } else if (selectedOption == "6") {
                    $("#ADName").val("限時廣告(24)");
                    $("#ADPoint").val(1500);
                }
            });
        });

        var jsonData = '@Html.Raw(ViewBag.JsonData)'; // 從ViewBag讀取JSON
        var data = JSON.parse(jsonData);
        function setDateBasedOnQuantity() {
            var selectedQuantity = document.getElementById('ADField').value;
            var lastEndDate = null;

            for (var i = data.length - 1; i >= 0; i--) {
                if (data[i].ADField.toString() === selectedQuantity) {
                    // 轉換時區
                    lastEndDate = new Date(data[i].ADEndDate);
                    lastEndDate.setHours(lastEndDate.getHours()-24);
                    break;
                }
            }

            var adStartDateInput = document.getElementById('ADStartDate');
            var adEndDateInput = document.getElementById('ADEndDate');

            if (lastEndDate && lastEndDate.getTime() > Date.now()) { // 使用 getTime() 和 Date.now() 比较时间戳
                lastEndDate.setHours(lastEndDate.getHours() + 24); // 下一天
                adStartDateInput.value = formatDateTimeInputValue(lastEndDate);

                if (selectedQuantity === "1") {
                    lastEndDate.setHours(lastEndDate.getHours() + 72); // 加3天
                }
                else if (selectedQuantity === "2") {
                    lastEndDate.setHours(lastEndDate.getHours() + 8); 
                }
                else if (selectedQuantity === "3")
                {
                    lastEndDate.setHours(lastEndDate.getHours() + 12);
                }
                else if (selectedQuantity === "4") {
                    lastEndDate.setHours(lastEndDate.getHours() + 16);
                }
                else
                {
                    lastEndDate.setHours(lastEndDate.getHours() + 24); // 加1天
                }
                adEndDateInput.value = formatDateTimeInputValue(lastEndDate);
                adEndDateInput.min = formatDateTimeInputValue(lastEndDate);
            } else {
                var tomorrow = new Date();
                tomorrow.setDate(tomorrow.getDate() + 1); // 下一天
                tomorrow.setHours(0, 0, 0, 0); // 00:00:00.000
                adStartDateInput.value = formatDateTimeInputValue(tomorrow);

                if (selectedQuantity === "1") {
                    tomorrow.setHours(tomorrow.getHours() + 72); // 加3天
                }
                else if (selectedQuantity === "2")
                {
                    tomorrow.setHours(lastEndDate.getHours() + 8);
                }
                else if (selectedQuantity === "3")
                {
                    tomorrow.setHours(lastEndDate.getHours() + 12);
                }
                else if (selectedQuantity === "4") {
                    tomorrow.setHours(lastEndDate.getHours() + 16);
                }
                else
                {
                    tomorrow.setHours(tomorrow.getHours() + 24); // 加1天
                }
                adEndDateInput.value = formatDateTimeInputValue(tomorrow);
                adEndDateInput.min = formatDateTimeInputValue(tomorrow);
            }
        }

        function formatDateTimeInputValue(dateObj) {
            // 轉換時區
            var tzoffset = (new Date()).getTimezoneOffset() * 60000;
            var localISOTime = (new Date(dateObj - tzoffset)).toISOString().slice(0, 16);
            return localISOTime;
        }
    </script>
}

@section Styles{
    <style>
    </style>
}
